//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /home/linvirt/code/rem_frontend_generator/parser/language.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class languageLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, T__55=56, T__56=57, T__57=58, T__58=59, 
		T__59=60, T__60=61, T__61=62, T__62=63, T__63=64, T__64=65, T__65=66, 
		T__66=67, T__67=68, T__68=69, T__69=70, T__70=71, T__71=72, T__72=73, 
		DECIMAL=74, BINARY=75, HEX=76, IDENTIFIER=77, WHITE_SPACE=78, LINE_COMMENT=79;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "T__55", "T__56", 
		"T__57", "T__58", "T__59", "T__60", "T__61", "T__62", "T__63", "T__64", 
		"T__65", "T__66", "T__67", "T__68", "T__69", "T__70", "T__71", "T__72", 
		"DECIMAL", "BINARY", "HEX", "IDENTIFIER", "WHITE_SPACE", "LINE_COMMENT"
	};


	public languageLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public languageLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'case'", "':'", "'loop'", "'switch'", "'{'", "'}'", "'return'", 
		"'='", "'if'", "'else'", "'UINT8_MIN'", "'INT8_MIN'", "'UINT16_MIN'", 
		"'INT16_MIN'", "'UINT32_MIN'", "'INT32_MIN'", "'UINT64_MIN'", "'INT64_MIN'", 
		"'UINT8_MAX'", "'INT8_MAX'", "'UINT16_MAX'", "'INT16_MAX'", "'UINT32_MAX'", 
		"'INT32_MAX'", "'UINT64_MAX'", "'INT64_MAX'", "'('", "')'", "'-'", "'~'", 
		"'!'", "'extend'", "'<'", "','", "'>'", "'*'", "'/'", "'sdiv'", "'%'", 
		"'+'", "'<<'", "'>>'", "'sar'", "'ror'", "'clt'", "'cgt'", "'clte'", "'cgte'", 
		"'<='", "'>='", "'=='", "'!='", "'&'", "'^'", "'|'", "'&&'", "'||'", "'?'", 
		"'fl_instruction'", "'external'", "'true'", "'false'", "'o8'", "'o16'", 
		"'o32'", "'o64'", "'o128'", "'i64'", "'integer'", "'int'", "'void'", "'o_type'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, "DECIMAL", "BINARY", "HEX", "IDENTIFIER", "WHITE_SPACE", "LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "language.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static languageLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,79,588,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,
		1,4,1,4,1,4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,
		7,1,8,1,8,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,
		1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
		1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
		1,14,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
		1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
		1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
		1,18,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,
		1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,
		1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,
		1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
		1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,
		1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,
		1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,34,1,34,1,35,1,35,
		1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,40,1,40,1,41,
		1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,
		1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,48,1,48,
		1,48,1,48,1,48,1,49,1,49,1,49,1,50,1,50,1,50,1,51,1,51,1,51,1,52,1,52,
		1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,56,1,56,1,56,1,57,1,57,1,57,1,58,
		1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
		1,59,1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,
		1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,64,1,64,1,64,
		1,64,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,67,1,67,1,67,1,67,1,67,
		1,68,1,68,1,68,1,68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,
		1,70,1,70,1,71,1,71,1,71,1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,
		1,73,4,73,544,8,73,11,73,12,73,545,1,74,1,74,1,74,1,74,3,74,552,8,74,1,
		74,4,74,555,8,74,11,74,12,74,556,1,75,1,75,1,75,1,75,3,75,563,8,75,1,75,
		1,75,1,76,1,76,5,76,569,8,76,10,76,12,76,572,9,76,1,77,1,77,1,77,1,77,
		1,78,1,78,1,78,1,78,5,78,582,8,78,10,78,12,78,585,9,78,1,78,1,78,0,0,79,
		1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
		29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,
		53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,
		77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,
		101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,
		121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,69,139,70,
		141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,157,79,1,0,7,1,
		0,48,57,1,0,48,49,3,0,48,57,65,70,97,102,3,0,65,90,95,95,97,122,4,0,48,
		57,65,90,95,95,97,122,3,0,9,10,13,13,32,32,2,0,10,10,13,13,593,0,1,1,0,
		0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
		1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
		0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
		1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,
		0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
		1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
		0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
		1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
		0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
		1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
		1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,
		1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,
		1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,
		1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,
		1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,1,159,1,0,0,0,3,161,
		1,0,0,0,5,166,1,0,0,0,7,168,1,0,0,0,9,173,1,0,0,0,11,180,1,0,0,0,13,182,
		1,0,0,0,15,184,1,0,0,0,17,191,1,0,0,0,19,193,1,0,0,0,21,196,1,0,0,0,23,
		201,1,0,0,0,25,211,1,0,0,0,27,220,1,0,0,0,29,231,1,0,0,0,31,241,1,0,0,
		0,33,252,1,0,0,0,35,262,1,0,0,0,37,273,1,0,0,0,39,283,1,0,0,0,41,293,1,
		0,0,0,43,302,1,0,0,0,45,313,1,0,0,0,47,323,1,0,0,0,49,334,1,0,0,0,51,344,
		1,0,0,0,53,355,1,0,0,0,55,365,1,0,0,0,57,367,1,0,0,0,59,369,1,0,0,0,61,
		371,1,0,0,0,63,373,1,0,0,0,65,375,1,0,0,0,67,382,1,0,0,0,69,384,1,0,0,
		0,71,386,1,0,0,0,73,388,1,0,0,0,75,390,1,0,0,0,77,392,1,0,0,0,79,397,1,
		0,0,0,81,399,1,0,0,0,83,401,1,0,0,0,85,404,1,0,0,0,87,407,1,0,0,0,89,411,
		1,0,0,0,91,415,1,0,0,0,93,419,1,0,0,0,95,423,1,0,0,0,97,428,1,0,0,0,99,
		433,1,0,0,0,101,436,1,0,0,0,103,439,1,0,0,0,105,442,1,0,0,0,107,445,1,
		0,0,0,109,447,1,0,0,0,111,449,1,0,0,0,113,451,1,0,0,0,115,454,1,0,0,0,
		117,457,1,0,0,0,119,459,1,0,0,0,121,474,1,0,0,0,123,483,1,0,0,0,125,488,
		1,0,0,0,127,494,1,0,0,0,129,497,1,0,0,0,131,501,1,0,0,0,133,505,1,0,0,
		0,135,509,1,0,0,0,137,514,1,0,0,0,139,518,1,0,0,0,141,526,1,0,0,0,143,
		530,1,0,0,0,145,535,1,0,0,0,147,543,1,0,0,0,149,551,1,0,0,0,151,562,1,
		0,0,0,153,566,1,0,0,0,155,573,1,0,0,0,157,577,1,0,0,0,159,160,5,59,0,0,
		160,2,1,0,0,0,161,162,5,99,0,0,162,163,5,97,0,0,163,164,5,115,0,0,164,
		165,5,101,0,0,165,4,1,0,0,0,166,167,5,58,0,0,167,6,1,0,0,0,168,169,5,108,
		0,0,169,170,5,111,0,0,170,171,5,111,0,0,171,172,5,112,0,0,172,8,1,0,0,
		0,173,174,5,115,0,0,174,175,5,119,0,0,175,176,5,105,0,0,176,177,5,116,
		0,0,177,178,5,99,0,0,178,179,5,104,0,0,179,10,1,0,0,0,180,181,5,123,0,
		0,181,12,1,0,0,0,182,183,5,125,0,0,183,14,1,0,0,0,184,185,5,114,0,0,185,
		186,5,101,0,0,186,187,5,116,0,0,187,188,5,117,0,0,188,189,5,114,0,0,189,
		190,5,110,0,0,190,16,1,0,0,0,191,192,5,61,0,0,192,18,1,0,0,0,193,194,5,
		105,0,0,194,195,5,102,0,0,195,20,1,0,0,0,196,197,5,101,0,0,197,198,5,108,
		0,0,198,199,5,115,0,0,199,200,5,101,0,0,200,22,1,0,0,0,201,202,5,85,0,
		0,202,203,5,73,0,0,203,204,5,78,0,0,204,205,5,84,0,0,205,206,5,56,0,0,
		206,207,5,95,0,0,207,208,5,77,0,0,208,209,5,73,0,0,209,210,5,78,0,0,210,
		24,1,0,0,0,211,212,5,73,0,0,212,213,5,78,0,0,213,214,5,84,0,0,214,215,
		5,56,0,0,215,216,5,95,0,0,216,217,5,77,0,0,217,218,5,73,0,0,218,219,5,
		78,0,0,219,26,1,0,0,0,220,221,5,85,0,0,221,222,5,73,0,0,222,223,5,78,0,
		0,223,224,5,84,0,0,224,225,5,49,0,0,225,226,5,54,0,0,226,227,5,95,0,0,
		227,228,5,77,0,0,228,229,5,73,0,0,229,230,5,78,0,0,230,28,1,0,0,0,231,
		232,5,73,0,0,232,233,5,78,0,0,233,234,5,84,0,0,234,235,5,49,0,0,235,236,
		5,54,0,0,236,237,5,95,0,0,237,238,5,77,0,0,238,239,5,73,0,0,239,240,5,
		78,0,0,240,30,1,0,0,0,241,242,5,85,0,0,242,243,5,73,0,0,243,244,5,78,0,
		0,244,245,5,84,0,0,245,246,5,51,0,0,246,247,5,50,0,0,247,248,5,95,0,0,
		248,249,5,77,0,0,249,250,5,73,0,0,250,251,5,78,0,0,251,32,1,0,0,0,252,
		253,5,73,0,0,253,254,5,78,0,0,254,255,5,84,0,0,255,256,5,51,0,0,256,257,
		5,50,0,0,257,258,5,95,0,0,258,259,5,77,0,0,259,260,5,73,0,0,260,261,5,
		78,0,0,261,34,1,0,0,0,262,263,5,85,0,0,263,264,5,73,0,0,264,265,5,78,0,
		0,265,266,5,84,0,0,266,267,5,54,0,0,267,268,5,52,0,0,268,269,5,95,0,0,
		269,270,5,77,0,0,270,271,5,73,0,0,271,272,5,78,0,0,272,36,1,0,0,0,273,
		274,5,73,0,0,274,275,5,78,0,0,275,276,5,84,0,0,276,277,5,54,0,0,277,278,
		5,52,0,0,278,279,5,95,0,0,279,280,5,77,0,0,280,281,5,73,0,0,281,282,5,
		78,0,0,282,38,1,0,0,0,283,284,5,85,0,0,284,285,5,73,0,0,285,286,5,78,0,
		0,286,287,5,84,0,0,287,288,5,56,0,0,288,289,5,95,0,0,289,290,5,77,0,0,
		290,291,5,65,0,0,291,292,5,88,0,0,292,40,1,0,0,0,293,294,5,73,0,0,294,
		295,5,78,0,0,295,296,5,84,0,0,296,297,5,56,0,0,297,298,5,95,0,0,298,299,
		5,77,0,0,299,300,5,65,0,0,300,301,5,88,0,0,301,42,1,0,0,0,302,303,5,85,
		0,0,303,304,5,73,0,0,304,305,5,78,0,0,305,306,5,84,0,0,306,307,5,49,0,
		0,307,308,5,54,0,0,308,309,5,95,0,0,309,310,5,77,0,0,310,311,5,65,0,0,
		311,312,5,88,0,0,312,44,1,0,0,0,313,314,5,73,0,0,314,315,5,78,0,0,315,
		316,5,84,0,0,316,317,5,49,0,0,317,318,5,54,0,0,318,319,5,95,0,0,319,320,
		5,77,0,0,320,321,5,65,0,0,321,322,5,88,0,0,322,46,1,0,0,0,323,324,5,85,
		0,0,324,325,5,73,0,0,325,326,5,78,0,0,326,327,5,84,0,0,327,328,5,51,0,
		0,328,329,5,50,0,0,329,330,5,95,0,0,330,331,5,77,0,0,331,332,5,65,0,0,
		332,333,5,88,0,0,333,48,1,0,0,0,334,335,5,73,0,0,335,336,5,78,0,0,336,
		337,5,84,0,0,337,338,5,51,0,0,338,339,5,50,0,0,339,340,5,95,0,0,340,341,
		5,77,0,0,341,342,5,65,0,0,342,343,5,88,0,0,343,50,1,0,0,0,344,345,5,85,
		0,0,345,346,5,73,0,0,346,347,5,78,0,0,347,348,5,84,0,0,348,349,5,54,0,
		0,349,350,5,52,0,0,350,351,5,95,0,0,351,352,5,77,0,0,352,353,5,65,0,0,
		353,354,5,88,0,0,354,52,1,0,0,0,355,356,5,73,0,0,356,357,5,78,0,0,357,
		358,5,84,0,0,358,359,5,54,0,0,359,360,5,52,0,0,360,361,5,95,0,0,361,362,
		5,77,0,0,362,363,5,65,0,0,363,364,5,88,0,0,364,54,1,0,0,0,365,366,5,40,
		0,0,366,56,1,0,0,0,367,368,5,41,0,0,368,58,1,0,0,0,369,370,5,45,0,0,370,
		60,1,0,0,0,371,372,5,126,0,0,372,62,1,0,0,0,373,374,5,33,0,0,374,64,1,
		0,0,0,375,376,5,101,0,0,376,377,5,120,0,0,377,378,5,116,0,0,378,379,5,
		101,0,0,379,380,5,110,0,0,380,381,5,100,0,0,381,66,1,0,0,0,382,383,5,60,
		0,0,383,68,1,0,0,0,384,385,5,44,0,0,385,70,1,0,0,0,386,387,5,62,0,0,387,
		72,1,0,0,0,388,389,5,42,0,0,389,74,1,0,0,0,390,391,5,47,0,0,391,76,1,0,
		0,0,392,393,5,115,0,0,393,394,5,100,0,0,394,395,5,105,0,0,395,396,5,118,
		0,0,396,78,1,0,0,0,397,398,5,37,0,0,398,80,1,0,0,0,399,400,5,43,0,0,400,
		82,1,0,0,0,401,402,5,60,0,0,402,403,5,60,0,0,403,84,1,0,0,0,404,405,5,
		62,0,0,405,406,5,62,0,0,406,86,1,0,0,0,407,408,5,115,0,0,408,409,5,97,
		0,0,409,410,5,114,0,0,410,88,1,0,0,0,411,412,5,114,0,0,412,413,5,111,0,
		0,413,414,5,114,0,0,414,90,1,0,0,0,415,416,5,99,0,0,416,417,5,108,0,0,
		417,418,5,116,0,0,418,92,1,0,0,0,419,420,5,99,0,0,420,421,5,103,0,0,421,
		422,5,116,0,0,422,94,1,0,0,0,423,424,5,99,0,0,424,425,5,108,0,0,425,426,
		5,116,0,0,426,427,5,101,0,0,427,96,1,0,0,0,428,429,5,99,0,0,429,430,5,
		103,0,0,430,431,5,116,0,0,431,432,5,101,0,0,432,98,1,0,0,0,433,434,5,60,
		0,0,434,435,5,61,0,0,435,100,1,0,0,0,436,437,5,62,0,0,437,438,5,61,0,0,
		438,102,1,0,0,0,439,440,5,61,0,0,440,441,5,61,0,0,441,104,1,0,0,0,442,
		443,5,33,0,0,443,444,5,61,0,0,444,106,1,0,0,0,445,446,5,38,0,0,446,108,
		1,0,0,0,447,448,5,94,0,0,448,110,1,0,0,0,449,450,5,124,0,0,450,112,1,0,
		0,0,451,452,5,38,0,0,452,453,5,38,0,0,453,114,1,0,0,0,454,455,5,124,0,
		0,455,456,5,124,0,0,456,116,1,0,0,0,457,458,5,63,0,0,458,118,1,0,0,0,459,
		460,5,102,0,0,460,461,5,108,0,0,461,462,5,95,0,0,462,463,5,105,0,0,463,
		464,5,110,0,0,464,465,5,115,0,0,465,466,5,116,0,0,466,467,5,114,0,0,467,
		468,5,117,0,0,468,469,5,99,0,0,469,470,5,116,0,0,470,471,5,105,0,0,471,
		472,5,111,0,0,472,473,5,110,0,0,473,120,1,0,0,0,474,475,5,101,0,0,475,
		476,5,120,0,0,476,477,5,116,0,0,477,478,5,101,0,0,478,479,5,114,0,0,479,
		480,5,110,0,0,480,481,5,97,0,0,481,482,5,108,0,0,482,122,1,0,0,0,483,484,
		5,116,0,0,484,485,5,114,0,0,485,486,5,117,0,0,486,487,5,101,0,0,487,124,
		1,0,0,0,488,489,5,102,0,0,489,490,5,97,0,0,490,491,5,108,0,0,491,492,5,
		115,0,0,492,493,5,101,0,0,493,126,1,0,0,0,494,495,5,111,0,0,495,496,5,
		56,0,0,496,128,1,0,0,0,497,498,5,111,0,0,498,499,5,49,0,0,499,500,5,54,
		0,0,500,130,1,0,0,0,501,502,5,111,0,0,502,503,5,51,0,0,503,504,5,50,0,
		0,504,132,1,0,0,0,505,506,5,111,0,0,506,507,5,54,0,0,507,508,5,52,0,0,
		508,134,1,0,0,0,509,510,5,111,0,0,510,511,5,49,0,0,511,512,5,50,0,0,512,
		513,5,56,0,0,513,136,1,0,0,0,514,515,5,105,0,0,515,516,5,54,0,0,516,517,
		5,52,0,0,517,138,1,0,0,0,518,519,5,105,0,0,519,520,5,110,0,0,520,521,5,
		116,0,0,521,522,5,101,0,0,522,523,5,103,0,0,523,524,5,101,0,0,524,525,
		5,114,0,0,525,140,1,0,0,0,526,527,5,105,0,0,527,528,5,110,0,0,528,529,
		5,116,0,0,529,142,1,0,0,0,530,531,5,118,0,0,531,532,5,111,0,0,532,533,
		5,105,0,0,533,534,5,100,0,0,534,144,1,0,0,0,535,536,5,111,0,0,536,537,
		5,95,0,0,537,538,5,116,0,0,538,539,5,121,0,0,539,540,5,112,0,0,540,541,
		5,101,0,0,541,146,1,0,0,0,542,544,7,0,0,0,543,542,1,0,0,0,544,545,1,0,
		0,0,545,543,1,0,0,0,545,546,1,0,0,0,546,148,1,0,0,0,547,548,5,48,0,0,548,
		552,5,98,0,0,549,550,5,48,0,0,550,552,5,66,0,0,551,547,1,0,0,0,551,549,
		1,0,0,0,552,554,1,0,0,0,553,555,7,1,0,0,554,553,1,0,0,0,555,556,1,0,0,
		0,556,554,1,0,0,0,556,557,1,0,0,0,557,150,1,0,0,0,558,559,5,48,0,0,559,
		563,5,120,0,0,560,561,5,48,0,0,561,563,5,88,0,0,562,558,1,0,0,0,562,560,
		1,0,0,0,563,564,1,0,0,0,564,565,7,2,0,0,565,152,1,0,0,0,566,570,7,3,0,
		0,567,569,7,4,0,0,568,567,1,0,0,0,569,572,1,0,0,0,570,568,1,0,0,0,570,
		571,1,0,0,0,571,154,1,0,0,0,572,570,1,0,0,0,573,574,7,5,0,0,574,575,1,
		0,0,0,575,576,6,77,0,0,576,156,1,0,0,0,577,578,5,47,0,0,578,579,5,47,0,
		0,579,583,1,0,0,0,580,582,8,6,0,0,581,580,1,0,0,0,582,585,1,0,0,0,583,
		581,1,0,0,0,583,584,1,0,0,0,584,586,1,0,0,0,585,583,1,0,0,0,586,587,6,
		78,0,0,587,158,1,0,0,0,7,0,545,551,556,562,570,583,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
