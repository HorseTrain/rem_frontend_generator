//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IlanguageListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class languageBaseListener : IlanguageListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceFile([NotNull] languageParser.SourceFileContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.sourceFile"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceFile([NotNull] languageParser.SourceFileContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.topLevelDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTopLevelDeclarations([NotNull] languageParser.TopLevelDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.topLevelDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTopLevelDeclarations([NotNull] languageParser.TopLevelDeclarationsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.elementInsert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementInsert([NotNull] languageParser.ElementInsertContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.elementInsert"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementInsert([NotNull] languageParser.ElementInsertContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.elementExtract"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElementExtract([NotNull] languageParser.ElementExtractContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.elementExtract"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElementExtract([NotNull] languageParser.ElementExtractContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] languageParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] languageParser.LineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.hostMemoryRead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHostMemoryRead([NotNull] languageParser.HostMemoryReadContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.hostMemoryRead"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHostMemoryRead([NotNull] languageParser.HostMemoryReadContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.hostMemoryWrite"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterHostMemoryWrite([NotNull] languageParser.HostMemoryWriteContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.hostMemoryWrite"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitHostMemoryWrite([NotNull] languageParser.HostMemoryWriteContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.semiColin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSemiColin([NotNull] languageParser.SemiColinContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.semiColin"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSemiColin([NotNull] languageParser.SemiColinContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionCallLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCallLine([NotNull] languageParser.FunctionCallLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionCallLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCallLine([NotNull] languageParser.FunctionCallLineContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseStatement([NotNull] languageParser.CaseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.caseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseStatement([NotNull] languageParser.CaseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.loopStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoopStatement([NotNull] languageParser.LoopStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.loopStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoopStatement([NotNull] languageParser.LoopStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitchStatement([NotNull] languageParser.SwitchStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.switchStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitchStatement([NotNull] languageParser.SwitchStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] languageParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] languageParser.ReturnStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.lValueSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLValueSet([NotNull] languageParser.LValueSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.lValueSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLValueSet([NotNull] languageParser.LValueSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuntimeSet([NotNull] languageParser.RuntimeSetContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeSet"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuntimeSet([NotNull] languageParser.RuntimeSetContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStatement([NotNull] languageParser.IfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.ifStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStatement([NotNull] languageParser.IfStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseStatement([NotNull] languageParser.ElseStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.elseStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseStatement([NotNull] languageParser.ElseStatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScope([NotNull] languageParser.ScopeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScope([NotNull] languageParser.ScopeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.identifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierExpression([NotNull] languageParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.identifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierExpression([NotNull] languageParser.IdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.externalIdentifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExternalIdentifierExpression([NotNull] languageParser.ExternalIdentifierExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.externalIdentifierExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExternalIdentifierExpression([NotNull] languageParser.ExternalIdentifierExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.baseExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseExpression([NotNull] languageParser.BaseExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.baseExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseExpression([NotNull] languageParser.BaseExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstants([NotNull] languageParser.ConstantsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.constants"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstants([NotNull] languageParser.ConstantsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCast([NotNull] languageParser.CastContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.cast"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCast([NotNull] languageParser.CastContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] languageParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] languageParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.signedSign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignedSign([NotNull] languageParser.SignedSignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.signedSign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignedSign([NotNull] languageParser.SignedSignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.floatConversions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFloatConversions([NotNull] languageParser.FloatConversionsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.floatConversions"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFloatConversions([NotNull] languageParser.FloatConversionsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.signExtend"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSignExtend([NotNull] languageParser.SignExtendContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.signExtend"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSignExtend([NotNull] languageParser.SignExtendContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis([NotNull] languageParser.ParenthesisContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.parenthesis"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis([NotNull] languageParser.ParenthesisContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.genericImpl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGenericImpl([NotNull] languageParser.GenericImplContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.genericImpl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGenericImpl([NotNull] languageParser.GenericImplContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] languageParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] languageParser.FunctionCallContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.vectorZero"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVectorZero([NotNull] languageParser.VectorZeroContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.vectorZero"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVectorZero([NotNull] languageParser.VectorZeroContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] languageParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] languageParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.encodingExtra"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEncodingExtra([NotNull] languageParser.EncodingExtraContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.encodingExtra"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEncodingExtra([NotNull] languageParser.EncodingExtraContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedLengthInstructionOperand([NotNull] languageParser.FixedLengthInstructionOperandContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperand"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedLengthInstructionOperand([NotNull] languageParser.FixedLengthInstructionOperandContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedLengthInstructionOperands([NotNull] languageParser.FixedLengthInstructionOperandsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperands"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedLengthInstructionOperands([NotNull] languageParser.FixedLengthInstructionOperandsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.fixedLengthInstruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFixedLengthInstruction([NotNull] languageParser.FixedLengthInstructionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.fixedLengthInstruction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFixedLengthInstruction([NotNull] languageParser.FixedLengthInstructionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.instructionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstructionDeclaration([NotNull] languageParser.InstructionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.instructionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstructionDeclaration([NotNull] languageParser.InstructionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParameter([NotNull] languageParser.FunctionParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionParameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParameter([NotNull] languageParser.FunctionParameterContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionParameters([NotNull] languageParser.FunctionParametersContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionParameters"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionParameters([NotNull] languageParser.FunctionParametersContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionBody([NotNull] languageParser.FunctionBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionBody([NotNull] languageParser.FunctionBodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.variableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableType([NotNull] languageParser.VariableTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.variableType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableType([NotNull] languageParser.VariableTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionDeclaration([NotNull] languageParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionDeclaration([NotNull] languageParser.FunctionDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] languageParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] languageParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.trueFalse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTrueFalse([NotNull] languageParser.TrueFalseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.trueFalse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTrueFalse([NotNull] languageParser.TrueFalseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumber([NotNull] languageParser.NumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.number"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumber([NotNull] languageParser.NumberContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeOperandType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuntimeOperandType([NotNull] languageParser.RuntimeOperandTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeOperandType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuntimeOperandType([NotNull] languageParser.RuntimeOperandTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.compileTimeIntegerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileTimeIntegerType([NotNull] languageParser.CompileTimeIntegerTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.compileTimeIntegerType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileTimeIntegerType([NotNull] languageParser.CompileTimeIntegerTypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeTypeCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuntimeTypeCase([NotNull] languageParser.RuntimeTypeCaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeTypeCase"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuntimeTypeCase([NotNull] languageParser.RuntimeTypeCaseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeTypeSwitch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuntimeTypeSwitch([NotNull] languageParser.RuntimeTypeSwitchContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeTypeSwitch"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuntimeTypeSwitch([NotNull] languageParser.RuntimeTypeSwitchContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeTypeReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRuntimeTypeReference([NotNull] languageParser.RuntimeTypeReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeTypeReference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRuntimeTypeReference([NotNull] languageParser.RuntimeTypeReferenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.operandTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOperandTypeDeclaration([NotNull] languageParser.OperandTypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.operandTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOperandTypeDeclaration([NotNull] languageParser.OperandTypeDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.undefinedVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUndefinedVariableDeclaration([NotNull] languageParser.UndefinedVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.undefinedVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUndefinedVariableDeclaration([NotNull] languageParser.UndefinedVariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.definedVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefinedVariableDeclaration([NotNull] languageParser.DefinedVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.definedVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefinedVariableDeclaration([NotNull] languageParser.DefinedVariableDeclarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableDeclaration([NotNull] languageParser.VariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.variableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableDeclaration([NotNull] languageParser.VariableDeclarationContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
