//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="languageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface IlanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.sourceFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSourceFile([NotNull] languageParser.SourceFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.sourceFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSourceFile([NotNull] languageParser.SourceFileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.topLevelDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTopLevelDeclarations([NotNull] languageParser.TopLevelDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.topLevelDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTopLevelDeclarations([NotNull] languageParser.TopLevelDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.elementInsert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementInsert([NotNull] languageParser.ElementInsertContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.elementInsert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementInsert([NotNull] languageParser.ElementInsertContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.elementExtract"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementExtract([NotNull] languageParser.ElementExtractContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.elementExtract"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementExtract([NotNull] languageParser.ElementExtractContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] languageParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] languageParser.LineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.hostMemoryRead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHostMemoryRead([NotNull] languageParser.HostMemoryReadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.hostMemoryRead"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHostMemoryRead([NotNull] languageParser.HostMemoryReadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.hostMemoryWrite"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHostMemoryWrite([NotNull] languageParser.HostMemoryWriteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.hostMemoryWrite"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHostMemoryWrite([NotNull] languageParser.HostMemoryWriteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.semiColin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSemiColin([NotNull] languageParser.SemiColinContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.semiColin"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSemiColin([NotNull] languageParser.SemiColinContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionCallLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCallLine([NotNull] languageParser.FunctionCallLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionCallLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCallLine([NotNull] languageParser.FunctionCallLineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseStatement([NotNull] languageParser.CaseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseStatement([NotNull] languageParser.CaseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopStatement([NotNull] languageParser.LoopStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.loopStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopStatement([NotNull] languageParser.LoopStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitchStatement([NotNull] languageParser.SwitchStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.switchStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitchStatement([NotNull] languageParser.SwitchStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] languageParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] languageParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.lValueSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLValueSet([NotNull] languageParser.LValueSetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.lValueSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLValueSet([NotNull] languageParser.LValueSetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuntimeSet([NotNull] languageParser.RuntimeSetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeSet"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuntimeSet([NotNull] languageParser.RuntimeSetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] languageParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] languageParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseStatement([NotNull] languageParser.ElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseStatement([NotNull] languageParser.ElseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.scope"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScope([NotNull] languageParser.ScopeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.scope"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScope([NotNull] languageParser.ScopeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.identifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierExpression([NotNull] languageParser.IdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.identifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierExpression([NotNull] languageParser.IdentifierExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.externalIdentifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExternalIdentifierExpression([NotNull] languageParser.ExternalIdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.externalIdentifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExternalIdentifierExpression([NotNull] languageParser.ExternalIdentifierExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.internalIdentifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInternalIdentifierExpression([NotNull] languageParser.InternalIdentifierExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.internalIdentifierExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInternalIdentifierExpression([NotNull] languageParser.InternalIdentifierExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.baseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseExpression([NotNull] languageParser.BaseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.baseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseExpression([NotNull] languageParser.BaseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstants([NotNull] languageParser.ConstantsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.constants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstants([NotNull] languageParser.ConstantsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCast([NotNull] languageParser.CastContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.cast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCast([NotNull] languageParser.CastContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryExpression([NotNull] languageParser.UnaryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.unaryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryExpression([NotNull] languageParser.UnaryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.signedSign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignedSign([NotNull] languageParser.SignedSignContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.signedSign"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignedSign([NotNull] languageParser.SignedSignContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.floatConversions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatConversions([NotNull] languageParser.FloatConversionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.floatConversions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatConversions([NotNull] languageParser.FloatConversionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.signExtend"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignExtend([NotNull] languageParser.SignExtendContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.signExtend"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignExtend([NotNull] languageParser.SignExtendContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.parenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesis([NotNull] languageParser.ParenthesisContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.parenthesis"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesis([NotNull] languageParser.ParenthesisContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.genericImpl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGenericImpl([NotNull] languageParser.GenericImplContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.genericImpl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGenericImpl([NotNull] languageParser.GenericImplContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] languageParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] languageParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.vectorZero"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVectorZero([NotNull] languageParser.VectorZeroContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.vectorZero"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVectorZero([NotNull] languageParser.VectorZeroContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] languageParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] languageParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.encodingExtra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEncodingExtra([NotNull] languageParser.EncodingExtraContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.encodingExtra"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEncodingExtra([NotNull] languageParser.EncodingExtraContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedLengthInstructionOperand([NotNull] languageParser.FixedLengthInstructionOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedLengthInstructionOperand([NotNull] languageParser.FixedLengthInstructionOperandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedLengthInstructionOperands([NotNull] languageParser.FixedLengthInstructionOperandsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.fixedLengthInstructionOperands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedLengthInstructionOperands([NotNull] languageParser.FixedLengthInstructionOperandsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.fixedLengthInstruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFixedLengthInstruction([NotNull] languageParser.FixedLengthInstructionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.fixedLengthInstruction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFixedLengthInstruction([NotNull] languageParser.FixedLengthInstructionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.instructionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstructionDeclaration([NotNull] languageParser.InstructionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.instructionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstructionDeclaration([NotNull] languageParser.InstructionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionParameter([NotNull] languageParser.FunctionParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionParameter([NotNull] languageParser.FunctionParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionParameters([NotNull] languageParser.FunctionParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionParameters([NotNull] languageParser.FunctionParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] languageParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] languageParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.variableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableType([NotNull] languageParser.VariableTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.variableType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableType([NotNull] languageParser.VariableTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDeclaration([NotNull] languageParser.FunctionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDeclaration([NotNull] languageParser.FunctionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] languageParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] languageParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.trueFalse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrueFalse([NotNull] languageParser.TrueFalseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.trueFalse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrueFalse([NotNull] languageParser.TrueFalseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumber([NotNull] languageParser.NumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumber([NotNull] languageParser.NumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeOperandType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuntimeOperandType([NotNull] languageParser.RuntimeOperandTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeOperandType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuntimeOperandType([NotNull] languageParser.RuntimeOperandTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.compileTimeIntegerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileTimeIntegerType([NotNull] languageParser.CompileTimeIntegerTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.compileTimeIntegerType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileTimeIntegerType([NotNull] languageParser.CompileTimeIntegerTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeTypeCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuntimeTypeCase([NotNull] languageParser.RuntimeTypeCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeTypeCase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuntimeTypeCase([NotNull] languageParser.RuntimeTypeCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeTypeSwitch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuntimeTypeSwitch([NotNull] languageParser.RuntimeTypeSwitchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeTypeSwitch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuntimeTypeSwitch([NotNull] languageParser.RuntimeTypeSwitchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.runtimeTypeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuntimeTypeReference([NotNull] languageParser.RuntimeTypeReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.runtimeTypeReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuntimeTypeReference([NotNull] languageParser.RuntimeTypeReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.operandTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperandTypeDeclaration([NotNull] languageParser.OperandTypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.operandTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperandTypeDeclaration([NotNull] languageParser.OperandTypeDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.undefinedVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUndefinedVariableDeclaration([NotNull] languageParser.UndefinedVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.undefinedVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUndefinedVariableDeclaration([NotNull] languageParser.UndefinedVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.definedVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinedVariableDeclaration([NotNull] languageParser.DefinedVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.definedVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinedVariableDeclaration([NotNull] languageParser.DefinedVariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="languageParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] languageParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="languageParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] languageParser.VariableDeclarationContext context);
}
